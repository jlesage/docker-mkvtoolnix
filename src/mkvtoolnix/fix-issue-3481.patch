From c2b817f8dd59a9859de4f4882f9b3ced01c76669 Mon Sep 17 00:00:00 2001
From: Moritz Bunkus <mo@bunkus.online>
Date: Fri, 17 Feb 2023 20:13:42 +0100
Subject: [PATCH] GUI: don't throw on file system access errors during search
 for exes
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This might happen when executing the GUI from a directory the user
doesn't have access to. The GUI will always look for an exe in the
current working directory first, and if that's inaccessible the
one-argument variants of the various `boost::filesystem::is_â€¦`
functions throw.

Fixes #3481.
---
 NEWS.md                              | 9 +++++++++
 src/mkvtoolnix-gui/util/settings.cpp | 6 ++++--
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/src/mkvtoolnix-gui/util/settings.cpp b/src/mkvtoolnix-gui/util/settings.cpp
index 683d621975..f597d401f9 100644
--- a/src/mkvtoolnix-gui/util/settings.cpp
+++ b/src/mkvtoolnix-gui/util/settings.cpp
@@ -1215,9 +1215,11 @@ Settings::exeWithPath(QString const &exe) {
   program.replace_extension(mtx::fs::to_path("exe"));
 #endif  // SYS_WINDOWS
 
-  for (auto const &potentialExe : potentialExes)
-    if (boost::filesystem::is_regular_file(potentialExe))
+  for (auto const &potentialExe : potentialExes) {
+    [[maybe_unused]] boost::system::error_code ec;
+    if (boost::filesystem::is_regular_file(potentialExe, ec))
       return QDir::toNativeSeparators(to_qs(potentialExe.string()));
+  }
 
   auto location = QStandardPaths::findExecutable(to_qs(program.string()));
   if (!location.isEmpty())
-- 
GitLab

